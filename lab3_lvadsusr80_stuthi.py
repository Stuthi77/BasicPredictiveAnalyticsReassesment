# -*- coding: utf-8 -*-
"""lab3_lvadsusr80_stuthi.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1OhqW6-yGCyaripWuRv3gfh8U907nWxxz
"""

#Kmeans Clustering
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import LabelEncoder,StandardScaler
from sklearn.metrics import silhouette_score
from sklearn.cluster import KMeans
#data loading
df=pd.read_csv('/content/customer_segmentation.csv')
df

#Data Cleaning
df.isnull().sum()

#Replacing null values
df['Income'].replace(np.nan,df['Income'].mean(),inplace=True)
df.isnull().sum()

#handling duplicate values
print(df.duplicated().sum())

#Outlier detection
df.info()
print(df.describe())

df.plot(kind='box')
plt.xticks(rotation=90)
plt.show()

for column in df.describe():
  df[column].plot(kind='hist')
  plt.xlabel(column)
  plt.show()

values=df.describe()
Q1=values.loc['25%']
Q3=values.loc['75%']
upper_bound=Q3+(Q3-Q1)*1.5
lower_bound=Q1-(Q3-Q1)*1.5
outlier=[]
for index in Q1.index:
  number=len(df[(df[index]>upper_bound[index])|(df[index]<lower_bound[index])])
  if number>0:
    outlier.append([index,number])
print(outlier)

df.info()

#model building
from sklearn.cluster import KMeans
from sklearn.metrics import silhouette_score,davies_bouldin_score,calinski_harabasz_score
from sklearn.model_selection import cross_val_score,StratifiedKFold
from sklearn.preprocessing import LabelEncoder
#converting categorical to numerical values
L=LabelEncoder()
df['Education']=L.fit_transform(df['Education'])
df['Marital_Status']=L.fit_transform(df['Marital_Status'])
df['Dt_Customer']=L.fit_transform(df['Dt_Customer'])
#elbow method
k=range(1,11)
sse=[]
for i in k:
  RFC=KMeans(n_clusters=i)
  RFC.fit_predict(df)
  sse.append(RFC.inertia_)
plt.plot(k,sse,marker='o')

#Modeling evaluation
RFC=KMeans(n_clusters=2)
RFC.fit_predict(df)
labels=RFC.labels_
from sklearn.metrics import silhouette_score
a=silhouette_score(df,labels=RFC.labels_)
print(a)

"""inference we got by doing Kmeans clustering for the customer segmentation as per the customer behaviour such as NumDealsPurchases NumWebPurchases,NumCatalogPurchases,NumStorePurchases,NumWebVisitsMonth and many other attributes"""